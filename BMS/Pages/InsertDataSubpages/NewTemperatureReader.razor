@page "/insertdata/reader"

<PageTitle>New Temperature Reader</PageTitle>

@using BMS.Data.Models
@using BMS.Services

@inject RoomService RoomService
@inject TemperatureReaderService TemperatureReaderService

<h3>New Temperature Reader</h3>

<hr />

<div class="card col col-lg-8 col-xl-6 col-xxl-4">
    <div class="card-header">New Temperature Reader</div>
    <div class="card-body">
        @if (status == OperationStatus.FinishedPositive)
        {
            <p class="card-text text-success">Temperature Reader created!</p>
        }
        else if (status == OperationStatus.FinishedNegative)
        {
            <p class="card-text text-danger">Failed to create Temperature Reader!</p>
        }
        else
        {
            <EditForm Model="@TemperatureReader" OnValidSubmit="HandleNewTemperatureReaderSubmit" FormName="NewTempReader">
                <DataAnnotationsValidator />
                @if (rooms == null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    <div class="mt-3">
                        <label for="ReaderName" class="form-label">Reader Name</label>
                        <InputText @bind-Value="TemperatureReader.Name" class="form-control" id="ReaderName" />
                        <ValidationMessage For="@(() => TemperatureReader.Name)" />
                    </div>
                    <div clkass="mt-3">
                        <label for="RoomId" class="form-label">Room</label>
                        <InputSelect @bind-Value="TemperatureReader.RoomId" id="RoomId" class="form-select">
                            @foreach (var room in rooms)
                            {
                                <option value="@room.Id">@room.Name</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => TemperatureReader.RoomId)" />
                    </div>
                }
                <div class="mt-3">
                    <input type="submit" value="Create" class="form-control btn btn-primary w-100 rounded" />
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    OperationStatus status = OperationStatus.New;
    TemperatureReader TemperatureReader = new TemperatureReader();
    private IEnumerable<Room>? rooms;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadAllRooms);
    }

    public void HandleNewTemperatureReaderSubmit(EditContext editContext)
    {
        status = OperationStatus.Submitted;
        try
        {
            var newReader = (TemperatureReader)editContext.Model;
            TemperatureReaderService.AddTemperatureReader(newReader);
            status = OperationStatus.FinishedPositive;
        }
        catch
        {
            status = OperationStatus.FinishedNegative;
        }
    }

    private void LoadAllRooms()
    {
        rooms = RoomService.GetAllRooms();
    }

    private enum OperationStatus
    {
        New,
        Submitted,
        FinishedPositive,
        FinishedNegative
    }
}
